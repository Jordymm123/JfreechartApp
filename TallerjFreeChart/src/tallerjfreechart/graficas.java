package tallerjfreechart;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.SeriesException;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
public class graficas extends javax.swing.JFrame {
    DefaultTableModel modelo=new DefaultTableModel();
    DefaultComboBoxModel caja=new DefaultComboBoxModel();
    String []valores=null;
    String []valores2=new String [8671];// vector para guardar las palabras
    String []topp=new String [8671];
    int []contador;
    int k;
    public graficas() {
        String [] Titulos;String [] Titulos2;
        String linea;
        int y=0,p=-1;
        caja.removeAllElements();
        caja.addElement("");
        File archivo = new File("Internet.csv");
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar información
            while(entrada.hasNext()){
                if (y==1) break;
                linea=entrada.nextLine();
                Titulos=linea.split(",");
                for(int x=0;x<Titulos.length;x++){
                    caja.addElement(Titulos[x]);
                }
                y++;
            }
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
        archivo = new File("Internet.csv");
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar información
            modelo.setColumnCount(5);
            modelo.setRowCount(8671);
            while(entrada.hasNext()){
                p++;
                linea=entrada.nextLine();
                Titulos2=linea.split(",");
                for(int x=0;x<Titulos2.length;x++){
                    modelo.setValueAt(Titulos2[x], p, x);
                }
            }
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Tipog = new javax.swing.JComboBox<>();
        Vaciar = new javax.swing.JButton();
        Graficar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Filtrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        QuitarF = new javax.swing.JButton();
        Seleccion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1218, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        Tipog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bar", "Pie", "Line", "X Y", "3D Pie ", "Bubble", "TimeSeries" }));
        Tipog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipogActionPerformed(evt);
            }
        });

        Vaciar.setText("Vaciar");
        Vaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaciarActionPerformed(evt);
            }
        });

        Graficar.setText("Graficar");
        Graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraficarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Todas estan hechas con file, tomando el documento del excel");

        Filtrar.setText("Filtrar por fila");
        Filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltrarActionPerformed(evt);
            }
        });

        jTable1.setModel(modelo);
        jScrollPane1.setViewportView(jTable1);

        QuitarF.setText("Quitar Filtro");
        QuitarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarFActionPerformed(evt);
            }
        });

        Seleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Seleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(Tipog, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(82, 82, 82)
                                        .addComponent(Seleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(Filtrar)
                                        .addGap(38, 38, 38)
                                        .addComponent(QuitarF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Vaciar)))
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Graficar)
                                .addGap(36, 36, 36)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tipog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Seleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Graficar)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Filtrar)
                                .addComponent(QuitarF))
                            .addComponent(Vaciar))))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TipogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TipogActionPerformed

    private void GraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraficarActionPerformed
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        DefaultPieDataset datosp = new DefaultPieDataset();
        DefaultXYZDataset datos3 = new DefaultXYZDataset();
        int j=Tipog.getSelectedIndex();
        for (int x=1;x<=k;x++) {datos.setValue(contador[x],topp[0],topp[x]);
        datosp.setValue(topp[x],contador[x]);}
        ChartPanel panel;
        switch (j){
            //GRAFICO DE BARRAS 2D
            case 0: JFreeChart graficobarras = ChartFactory.createBarChart(
            "Grafico de barras pedido",
            topp[0],
            "Cantidad",
            datos
            );
            panel = new ChartPanel(graficobarras);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();
            break;
            //GRAFICO DE TORTA O PIE 
            case 1: JFreeChart graficotorta = ChartFactory.createPieChart(
                topp[0],
                datosp,
                true,
                true,
                false
            );
            panel=new ChartPanel(graficotorta);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();  
            break;
            //GRAFICO DE LINEAS 
            case 2: JFreeChart graficolinea= ChartFactory.createLineChart(
                   "Grafica de lineas pedidas",
                    topp[0],"Cantidad",
                    datos,
                    PlotOrientation.VERTICAL,
                    true,true,false);
            panel=new ChartPanel(graficolinea);
            panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());
            jPanel1.add(panel,BorderLayout.NORTH);
            pack();
            repaint();  
            break;
            //GRAFICO DE XY
            case 3: XYSeries datos2=new XYSeries("datos2");
            for (int x=1;x<=k;x++) datos2.add(x,contador[x]);
            XYSeriesCollection datos2c=new XYSeriesCollection();
            datos2c.addSeries(datos2);
                JFreeChart graficoxy = ChartFactory.createXYLineChart(
                    "Grafico de XY",
                    topp[0],
                    "Cantidad",
                    datos2c,
                    PlotOrientation.VERTICAL,
                    true,true,false);
            panel=new ChartPanel(graficoxy);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();  
                break;
            //GRAFICO DE PIE 3D
            case 4: JFreeChart graficotorta3d = ChartFactory.createPieChart3D(
                topp[0],
                datosp,
                true,
                true,
                false
            );
            PiePlot3D plot = ( PiePlot3D ) graficotorta3d.getPlot( );             
            plot.setStartAngle( 270 );plot.setForegroundAlpha( 0.60f );plot.setInteriorGap( 0.02 );             
            panel=new ChartPanel(graficotorta3d);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();  
            break;
            //Grafico burbuja
            case 5: double [] ad=new double[k];double [] ad2=new double[k];double [] ad3=new double[k];
            double [][] ad1;
            for (int x=1;x<=k;x++) {ad[x-1]=contador[x];
            if (contador[x]>500) {
                ad2[x-1]=x*100;
                ad3[x-1]=contador[x]/50;} else {ad3[x-1]=contador[x];ad2[x-1]=x*5;}
                ad1=new double [][]{ad,ad2,ad3};
                datos3.addSeries(topp[x],ad1);
            }
                JFreeChart burbuja = ChartFactory.createBubbleChart(
                        "Grafico de burbuja",
                        "Cantidad",
                        topp[0],
                        datos3,
                        PlotOrientation.HORIZONTAL,
                        true,true,false);
            panel=new ChartPanel(burbuja);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();  
                break;
            case 6:XYDataset datos4; 
            TimeSeries datos44=new TimeSeries("datos4");
            Second current = new Second(new Date(0,0,2023));       
        for (int i = 0; i<k; i++) {
            try {                 
            datos44.add(current, contador[i+1]);                 
            current = ( Second ) current.next( ); 
            } catch ( SeriesException e ) {
                System.err.println("Error adding to series");
            }
        }
        datos4= new TimeSeriesCollection(datos44);
                JFreeChart timeseries = ChartFactory.createTimeSeriesChart(
                        "Grafica Time Series",
                        topp[0],
                        "Cantidad",
                        datos4,
                        false,false,false);
            panel=new ChartPanel(timeseries);panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension (1220,252));
            jPanel1.setLayout(new BorderLayout());jPanel1.add(panel,BorderLayout.NORTH);
            pack();repaint();
                break;
        }
        
    }//GEN-LAST:event_GraficarActionPerformed

    private void FiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltrarActionPerformed
        String linea; // variable para guardar los datos de una linea
        File archivo = new File("Internet.csv");  // objeto que lee el archivo
        int i=-1;
        k=0;
        contador=new int [8671];
        int j=Seleccion.getSelectedIndex();  
        for (int x=0;x<contador.length;x++)contador[x]=0;
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar información
            modelo.setColumnCount(1);
            modelo.setRowCount(8671);
            while(entrada.hasNext()){
                i++;
                linea=entrada.nextLine(); // toma la linea completa y la almacena en un string
                valores=linea.split(","); // toma los valores entre coma y coma y los guarda en 
                if (j!=0)valores2[i]=valores[j-1];else valores2[i]="";
                // System.out.println(" los valores de la primera linea son: "+ linea+" el primer valor guardado es: "+ valores[0]);
                if (i==0 && j!=0)topp[0]=valores[j-1];else topp[i]="";
                if (j!=0){
                    for (int x=0;x<=k;x++){
                        if (topp[x].equals(valores[j-1]))break;
                        else if (x==k){k++;topp[k]=valores[j-1];}
                    }
                }
                if (j!=0){
                    modelo.setValueAt(valores[j-1], i,0);
                }else modelo.setValueAt("",i,0);
            }
            //para saber cuantas veces se repite el dato
            for (int x=0;x<=k;x++){
                for (int z=0;z<valores2.length;z++){
                    if (topp[x].equals(valores2[z]))contador[x]+=1;
                }
            }
            //vaciar el resto del array
            for (int x=k+1;x<topp.length;x++)
            {topp[x]="0";contador[x]=0;}
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
    }//GEN-LAST:event_FiltrarActionPerformed

    private void SeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionActionPerformed
        Seleccion.setModel(caja);
    }//GEN-LAST:event_SeleccionActionPerformed

    private void QuitarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarFActionPerformed
        String [] Titulos;
        String linea;
        int p=-1;
        File archivo = new File("Internet.csv");
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar información
            modelo.setColumnCount(5);
            modelo.setRowCount(8671);
            while(entrada.hasNext()){
                p++;
                linea=entrada.nextLine();
                Titulos=linea.split(",");
                for(int x=0;x<Titulos.length;x++){
                    modelo.setValueAt(Titulos[x], p, x);
                }
            }
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
    }//GEN-LAST:event_QuitarFActionPerformed

    private void VaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaciarActionPerformed
        jPanel1.removeAll();
        jPanel1.setPreferredSize(new Dimension (1220,252));
        jPanel1.revalidate();
        jPanel1.repaint();
    }//GEN-LAST:event_VaciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new graficas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Filtrar;
    private javax.swing.JButton Graficar;
    private javax.swing.JButton QuitarF;
    private javax.swing.JComboBox<String> Seleccion;
    private javax.swing.JComboBox<String> Tipog;
    private javax.swing.JButton Vaciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
